{"version":3,"sources":["assets/images/logo.png","firebase/firebase.js","components/Button.js","components/Login.js","components/Register.js","components/Navbarprofile.js","components/Homewallposts.js","components/Profile.js","components/Account.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Button","props","react_default","a","createElement","type","className","content","Login","state","email","password","error","handleInputChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","_this$state","auth","signInWithEmailAndPassword","then","user","history","push","catch","_this$state2","this","src","Logo","alt","Form_default","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Text","message","components_Button","react_router_dom","to","Component","Register","createUserWithEmailAndPassword","Navbarprofile","exact","onClick","signOut","HomeWallposts","components_Navbarprofile","React","Profile","Account","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listener","onAuthStateChanged","logged","_this2","react_router","path","render","Homewallposts","components_Login","components_Register","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e9fcbb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.245108bc.png\";","import * as firebase from 'firebase'\n// import firebase from 'firebase';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAt0umhs7Ux-IkGsuRPQP_VRYtshTHLEzA\",\n    authDomain: \"redsocialreact-ed89f.firebaseapp.com\",\n    databaseURL: \"https://redsocialreact-ed89f.firebaseio.com\",\n    projectId: \"redsocialreact-ed89f\",\n    storageBucket: \"\",\n    messagingSenderId: \"463873443383\",\n    appId: \"1:463873443383:web:673ec9f6e0434940\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\n\n// const Button = (props) => (\n//     <a href={props.hash} className={ props.className } >\n//         { props.content }\n//     </a >\n// )\n\nconst Button = props => {\n    return (\n        <button type={props.type} className={props.className}> {props.content} </button>\n    )\n}\n\nexport default Button;","import React, { Component } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Logo from \"../assets/images/logo.png\";\nimport Button from \"./Button\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null\n  };\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(user => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: error });\n      });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"contentLogIn\">\n          <header>\n            <img className=\"header-logo-image\" src={Logo} alt=\"logo\" />\n            <h2>Iniciar Sesión</h2>\n          </header>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Correo electrónico</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Ingresa tu correo\"\n                value={email}\n                onChange={this.handleInputChange}\n              />\n              <Form.Text className=\"text-muted\">\n                Nunca compartas datos personales con extraños.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Contraseña\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            {error ? <p>{error.message}</p> : null}\n            <Button\n              type=\"submit\"\n              className=\"btnEnter btn btn-dark btn-lg\"\n              content=\"Entrar\"\n            />\n          </Form>\n          <Link to=\"./Register\">¿Aún no tienes cuenta? REGÍSTRATE AQUÍ</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Logo from \"../assets/images/logo.png\";\nimport Button from \"./Button\";\n\nclass Register extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null\n  };\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(user => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: error });\n      });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"contentSignUp\">\n          <header>\n            <img className=\"header-logo-image\" src={Logo} alt=\"logo\" />\n            <h2>Registrate</h2>\n          </header>\n          <Form onSubmit={this.handleSubmit}>\n            {/* <Form.Group controlId=\"name\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control placeholder=\"Nickname\" />\n            </Form.Group> */}\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Correo electrónico</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Ingresa tu correo\"\n                value={email}\n                onChange={this.handleInputChange}\n              />\n              <Form.Text className=\"text-muted\">\n                Nunca compartas datos personales con extraños.\n              </Form.Text>\n              {/* <Form.Label>Confirma tu correo</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Confirmar correo\" /> */}\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Contraseña\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n              {/* <Form.Label>Confirma tu contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirma tu contraseña\"\n              /> */}\n            </Form.Group>\n            {error ? <p>{error.message}</p> : null}\n            <Button\n              type=\"submit\"\n              className=\"btnEnter btn btn-dark btn-lg\"\n              content=\"Registrar\"\n            />\n          </Form>\n          <Link to=\"./\">¿Ya eres usuario registrado? VE A INICIAR SESIÓN</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport Logo from '../assets/images/logo.png';\n\nimport firebase from '../firebase/firebase';\n\nconst Navbarprofile = () => (\n    <nav className=\"navbar\">\n        <Link className=\"App-logo navbar-brand\" to=\"/\">\n            <img className=\"App-logo-image\" src={Logo} alt=\"logo\" />\n        </Link>\n        <div className=\"navMenu navbar-nav\">\n            <NavLink className=\"nav-item navMenuLink\" exact to=\"/\" >Muro</NavLink>\n            <NavLink className=\"nav-item navMenuLink\" to=\"/Profile\" >Perfil</NavLink>\n            <NavLink className=\"nav-item navMenuLink\" to=\"/Account\" >Cuenta</NavLink>\n\n            <Link className=\"nav-item navMenuLink\" \n                to=\"/\" \n                onClick={() => firebase.auth().signOut()} >Cerrar</Link>\n\n\n        </div>\n\n    </nav>\n);\n\nexport default Navbarprofile;","import React from 'react';\nimport Navbarprofile from './Navbarprofile'\n\nclass HomeWallposts extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <Navbarprofile />\n                <div className=\"contentWallPost\">\n                    <h2>Muro</h2>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeWallposts;","import React from 'react';\nimport Navbarprofile from './Navbarprofile'\n\nclass Profile extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <Navbarprofile />\n                <div className=\"contentProfile\">\n                    <h2>Perfil</h2>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport Navbarprofile from './Navbarprofile'\n\nclass Account extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <Navbarprofile />\n                <div className=\"contentAccount\">\n                    <h2>Actualiza los datos de tu cuenta</h2>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Account;","import React, { Component } from 'react';\nimport firebase from './firebase/firebase';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport HomeWallposts from './components/Homewallposts';\nimport Profile from './components/Profile'\nimport Account from './components/Account';\n\nclass App extends Component {\n  constructor(props, state) {\n    super(props, state)\n    this.state = {\n      logged: {},\n    };\n    //this.listener = this.listener.bind(this);\n  }\n  componentDidMount() {\n    this.listener();\n  }\n  \n  listener = () => {\n    firebase.auth().onAuthStateChanged((logged) => {\n      logged ? this.setState({ logged: true }) : this.setState({ logged: false });\n    });\n  }\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" render={() => this.state.logged ? (<HomeWallposts logged={this.state.logged} />) : (<Login />)} />\n            <Route path=\"/Homewallposts\" render={() => this.state.logged ? (<HomeWallposts logged={this.state.logged} />) : (<Register />)} />\n            <Route path=\"/Profile\" component={Profile} />\n            <Route path=\"/Account\" component={Account} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}