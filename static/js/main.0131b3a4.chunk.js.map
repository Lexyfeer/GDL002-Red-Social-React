{"version":3,"sources":["assets/images/logo.png","firebase/firebase.js","components/Homewallposts.js","components/Profile.js","components/Account.js","components/Navbarprofile.js","components/Button.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","HomeWallposts","react_default","a","createElement","className","React","Component","Profile","Account","Navbarprofile","react","react_router_dom","to","src","Logo","alt","exact","onClick","auth","signOut","react_router","path","component","Button","props","type","content","Login","state","email","password","error","handleInputChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","_this$state","signInWithEmailAndPassword","then","user","history","push","catch","_this$state2","this","Form_default","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Text","message","components_Button","Register","createUserWithEmailAndPassword","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","listener","onAuthStateChanged","logged","console","log","Navbarprofile_Navbarprofile","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0131b3a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.245108bc.png\";","import * as firebase from 'firebase'\n// import firebase from 'firebase';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAt0umhs7Ux-IkGsuRPQP_VRYtshTHLEzA\",\n    authDomain: \"redsocialreact-ed89f.firebaseapp.com\",\n    databaseURL: \"https://redsocialreact-ed89f.firebaseio.com\",\n    projectId: \"redsocialreact-ed89f\",\n    storageBucket: \"\",\n    messagingSenderId: \"463873443383\",\n    appId: \"1:463873443383:web:673ec9f6e0434940\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\n\nclass HomeWallposts extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n\n                <div className=\"contentWallPost\">\n                    <h2>Muro</h2>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomeWallposts;","import React from 'react';\n\nclass Profile extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <div className=\"contentProfile\">\n                    <h2>Perfil</h2>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\n\nclass Account extends React.Component {\n    render() {\n        return (\n            <div className=\"mainContainer\">\n                <div className=\"contentAccount\">\n                    <h2>Actualiza los datos de tu cuenta</h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Account;","import React, {Component, Fragment} from 'react';\nimport { NavLink, Link, Route, Switch } from 'react-router-dom';\nimport Logo from '../assets/images/logo.png';\n\nimport firebase from '../firebase/firebase';\n\nimport HomeWallposts from './Homewallposts';\nimport Profile from './Profile'\nimport Account from './Account'\n\nexport default class  Navbarprofile extends Component{\n    render(){\n        return (\n            <Fragment>\n                \n                <nav className=\"navbar\">\n                    <Link className=\"App-logo navbar-brand\" to=\"/\">\n                        <img className=\"App-logo-image\" src={Logo} alt=\"logo\" />\n                    </Link>\n                    <div className=\"navMenu navbar-nav\">\n                        <NavLink className=\"nav-item navMenuLink\" exact to=\"/\" >Muro</NavLink>\n                        <NavLink className=\"nav-item navMenuLink\" to=\"/Profile\" >Perfil</NavLink>\n                        <NavLink className=\"nav-item navMenuLink\" to=\"/Account\" >Cuenta</NavLink>\n                        <Link className=\"nav-item navMenuLink\"  to=\"/\" \n                            onClick={() => firebase.auth().signOut()} >Cerrar</Link>\n                    </div>\n                </nav>\n\n                <Switch>\n                    <div className=\"Navigation\">\n                    <Route exact path=\"/\" component={HomeWallposts} />\n                    <Route path=\"/Profile\" component={Profile} />\n                    <Route path=\"/Account\" component={Account} />\n                    </div>\n                </Switch>\n        </Fragment>\n           \n        )\n    }\n};","import React from 'react';\n\n// const Button = (props) => (\n//     <a href={props.hash} className={ props.className } >\n//         { props.content }\n//     </a >\n// )\n\nconst Button = props => {\n    return (\n        <button type={props.type} className={props.className}> {props.content} </button>\n    )\n}\n\nexport default Button;","import React, { Component } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Logo from \"../assets/images/logo.png\";\nimport Button from \"./Button\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null\n  };\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(user => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: error });\n      });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"contentLogIn\">\n          <header>\n            <img className=\"header-logo-image\" src={Logo} alt=\"logo\" />\n            <h2>Iniciar Sesión</h2>\n          </header>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Correo electrónico</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Ingresa tu correo\"\n                value={email}\n                onChange={this.handleInputChange}\n              />\n              <Form.Text className=\"text-muted\">\n                Nunca compartas datos personales con extraños.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Contraseña\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            {error ? <p>{error.message}</p> : null}\n            <Button\n              type=\"submit\"\n              className=\"btnEnter btn btn-dark btn-lg\"\n              content=\"Entrar\"\n            />\n          </Form>\n          <Link to=\"./Register\">¿Aún no tienes cuenta? REGÍSTRATE AQUÍ</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport firebase from \"../firebase/firebase\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Logo from \"../assets/images/logo.png\";\nimport Button from \"./Button\";\n\nclass Register extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: null\n  };\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(user => {\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error: error });\n      });\n  };\n  render() {\n    const { email, password, error } = this.state;\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"contentSignUp\">\n          <header>\n            <img className=\"header-logo-image\" src={Logo} alt=\"logo\" />\n            <h2>Registrate</h2>\n          </header>\n          <Form onSubmit={this.handleSubmit}>\n            {/* <Form.Group controlId=\"name\">\n              <Form.Label>Nombre</Form.Label>\n              <Form.Control placeholder=\"Nickname\" />\n            </Form.Group> */}\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Correo electrónico</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Ingresa tu correo\"\n                value={email}\n                onChange={this.handleInputChange}\n              />\n              <Form.Text className=\"text-muted\">\n                Nunca compartas datos personales con extraños.\n              </Form.Text>\n              {/* <Form.Label>Confirma tu correo</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Confirmar correo\" /> */}\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Contraseña\"\n                value={password}\n                onChange={this.handleInputChange}\n              />\n              {/* <Form.Label>Confirma tu contraseña</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirma tu contraseña\"\n              /> */}\n            </Form.Group>\n            {error ? <p>{error.message}</p> : null}\n            <Button\n              type=\"submit\"\n              className=\"btnEnter btn btn-dark btn-lg\"\n              content=\"Registrar\"\n            />\n          </Form>\n          <Link to=\"./\">¿Ya eres usuario registrado? VE A INICIAR SESIÓN</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport firebase from './firebase/firebase';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Navbarprofile from './components/Navbarprofile';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nclass App extends Component {\n  constructor(props, state) {\n    super(props, state)\n    this.state = { logged: false};\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount()')\n    this.listener();\n  }\n  \n  listener = () => {\n    firebase.auth().onAuthStateChanged((logged) => {\n      logged ? this.setState({ logged: true }) : this.setState({ logged: false });\n    });\n  }\n\n  render() {\n    console.log('render()')\n\n    if (this.state.logged) {\n      return (\n          <Navbarprofile/>  \n      );\n    } else {\n\n        return (\n          <Switch>\n            <div className=\"Navigation\">\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/Register\" component={Register} />\n            </div>\n          </Switch>\n\n        );\n      \n    }\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <HashRouter>\n        <StrictMode>\n            <App />\n        </StrictMode>\n    </HashRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}